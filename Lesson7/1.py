"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку
конструктора класса (метод __init__()), который должен принимать
данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
Следующий шаг — реализовать перегрузку метода __str__() для
вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации
операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять
поэлементно — первый элемент первой строки первой
матрицы складываем с первым элементом первой строки
второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, list_1):
        self.list_1 = list_1

    def __add__(self, other):
        matr = [[0] * len(self.list_1[i]) for i in range(len(self.list_1))]

        for i in range(len(self.list_1)):
            for j in range(len(other.list_1[i])):
                matr[i][j] = self.list_1[i][j] + other.list_1[i][j]

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr]))

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.list_1]))


# my_matrix1 = Matrix([[5, 18, 11], [6, 17, 23], [41, 50, 9]])
# my_matrix2 = Matrix([[45, 8, 2], [6, 7, 93], [24, 5, 97]])
my_matrix1 = Matrix([[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]])
my_matrix2 = Matrix([[2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2]])
print(my_matrix1+my_matrix2)
print()
print(my_matrix1)

